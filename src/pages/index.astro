---
import BaseLayout from '../layouts/BaseLayout.astro';
import { FeaturedPost } from '../components/FeaturedPost';
import { getImage } from 'astro:assets';
import mountainsHero from '../assets/mountains-hero.jpg';

const placeholder = `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do 
eiusmod tempor incididunt`;

// Calculate image widths based on container sizes and device pixel ratios
const baseWidths = [677, 1000, 1200, 1600, 2000];
const pixelRatios = [1, 1.5, 2, 3];
const widths = [...new Set(
  baseWidths.flatMap(width => 
    pixelRatios.map(ratio => Math.round(width * ratio))
  ).filter(width => width <= 3024) // Don't exceed source image width
  .sort((a, b) => a - b)
)];

// Generate srcset for responsive images
const images = await Promise.all(
  widths.map(async (width) => {
    const image = await getImage({
      src: mountainsHero,
      width,
      height: Math.round(width * (333/677)), // Match mask aspect ratio
      format: 'webp',
      quality: 85
    });
    return {
      src: image.src,
      width: width
    };
  })
);

// Get the smallest image for the src attribute (fallback)
const defaultImage = images[0];
const srcset = images.map(img => `${img.src} ${img.width}w`).join(', ');

const posts = [
  {
    category: "LATEST BLOG",
    title: "The Future of Web Development",
    href: "/blog/future-of-web-dev"
  },
  {
    category: "OPINION",
    title: "Building with Solid.js",
    href: "/blog/building-with-solidjs"
  },
  {
    category: "OPINION",
    title: "Modern CSS Techniques",
    href: "/blog/modern-css"
  }
];

// Define sizes attribute for responsive images
const sizes = "(min-width: 2000px) 2000px, (min-width: 1600px) 1600px, (min-width: 1200px) 1200px, (min-width: 1000px) 1000px, (min-width: 677px) 677px, 100vw";
---

<BaseLayout>
  <main>
    <div class="header">
      <h1>hughsername</h1>
      <p class="placeholder-text">
        {placeholder}
      </p>
    </div>
    <div class="image-container">
      {posts.map(post => (
        <FeaturedPost 
          src={defaultImage.src}
          srcset={srcset}
          sizes={sizes}
          alt="Mountain landscape with snow-capped peaks"
          category={post.category}
          title={post.title}
          description={placeholder}
          href={post.href}
          client:load 
        />
      ))}
    </div>
  </main>
</BaseLayout>

<style>
  main {
    position: relative;
    display: flex;
    flex-direction: column;
    flex: 1;
    width: 100%;
  }

  .header {
    max-width: 420px;
    margin-bottom: 2rem;
    padding: 24px 28px;
  }

  .image-container {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: var(--space-7);
    padding-bottom: var(--space-7);
    width: 100%;
    container-type: inline-size;
  }
</style>
