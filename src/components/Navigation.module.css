.nav {
  position: fixed;
  top: env(safe-area-inset-top);
  right: env(safe-area-inset-right);
  bottom: env(safe-area-inset-bottom);
  width: 96px;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  padding: 24px 16px;
  z-index: 10;
  pointer-events: none; /* This makes the nav container ignore mouse events */
}

/* Create a clickable area for the menu button */
.menuLink {
  width: 64px;
  height: 80px;
  border-radius: 12px;
  cursor: pointer;
  z-index: 0;
  pointer-events: auto;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 8px;
  position: relative;
}

/* Glass effect container */
.menuLink::before {
  content: '';
  position: absolute;
  inset: 2px;
  border-radius: 10px;
  backdrop-filter: blur(4px) saturate(180%);
  -webkit-backdrop-filter: blur(4px) saturate(180%);
  background: rgba(255, 255, 255, 0.05);
  z-index: -1;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.menuLink:hover::before {
  opacity: 1;
}

/* Show border on hover only when menu is closed */
.menuLink::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 12px;
  background: conic-gradient(
    from var(--border-angle),
    rgb(33, 37, 104) 0%, 
    rgb(85, 112, 255) 25%, 
    rgb(140, 180, 255) 50%,
    rgb(85, 112, 255) 75%, 
    rgb(33, 37, 104) 100%
  );
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask: 
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  mask-composite: exclude;
  z-index: 1;
  padding: 2px;
  opacity: 0;
  transition: opacity 0.3s ease;
}

/* No delay when menu opens (border disappears instantly) */
.navList:has(.iconGroup.open) li:first-child .menuLink::after {
  transition: opacity 0s;
}

/* Delay only when menu is closed and we hover */
.navList:not(:has(.iconGroup.open)) li:first-child .menuLink:hover::after {
  opacity: 1;
  animation: borderRotate 6s linear infinite;
  transition-delay: 0.5s;
}

/* Content container */
.menuLink > * {
  position: relative;
  z-index: 2; /* Above the motion border */
}

/* Shader container */
.shaderContainer {
  position: absolute;
  top: 16px;
  right: 16px;
  width: 64px;
  height: calc(100vh - 32px); /* Full viewport height minus top/bottom margin */
  border-radius: 12px;
  opacity: 0;
  z-index: -2; /* Behind the menu items */
  overflow: hidden;
  pointer-events: none;
  transform: scale(0.2, 0.2);
  transform-origin: top right;
  transition: opacity 0.4s ease-in, transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  transition-delay: 0.2s; /* Start fading in after menu expands */
}

.shaderContainer canvas {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transform-origin: top right;
  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.nav:has(.iconGroup.open) .shaderContainer canvas {
  transform: scale(1);
}

/* Border effect */
.nav::before {
  content: '';
  position: absolute;
  top: 16px;
  right: 16px;
  width: 64px;
  height: 80px; /* Match menuTrigger height */
  border-radius: 12px;
  opacity: 0;
  z-index: 1;
  background: conic-gradient(
    from var(--border-angle),
    rgb(33, 37, 104) 0%, 
    rgb(85, 112, 255) 25%, 
    rgb(140, 180, 255) 50%,
    rgb(85, 112, 255) 75%, 
    rgb(33, 37, 104) 100%
  );
  padding: 2px;
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask: 
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  mask-composite: exclude;
  transition: height 0.6s cubic-bezier(0.4, 0, 0.2, 1),
              opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1),
              --border-angle 0.3s ease;
  box-shadow: -42px 42px 99px 0px rgba(0, 0, 0, 0.50);
}



/* Expand background when menu is open */
.nav::before,
.nav::after {
  height: 80px; /* Match menuTrigger height */
}

/* Open state */
.nav:has(.iconGroup.open)::before {
  height: calc(100vh - 32px);
  opacity: 1;
}

.nav:has(.iconGroup.open) .shaderContainer {
  transform: scale(1, 1);
  opacity: 1;
}

/* Force GPU acceleration */
.shaderContainer {
  transform: translateZ(0);
  will-change: transform, opacity;
}

/* Show effects on hover */
.nav:has(.menuTrigger:hover)::before {
  opacity: 1;
}

/* Gradient border animation */
@property --border-angle {
  syntax: '<angle>';
  inherits: false;
  initial-value: 0turn;
}

@keyframes borderRotate {
  to {
    --border-angle: 1turn;
  }
}

/* Rotating border animation */
.nav:has(.menuTrigger:hover)::before,
.nav:has(.iconGroup.open)::before {
  animation: borderRotate 6s linear infinite;
}


/* Menu open state */
.iconGroup {
  height: 0;
  opacity: 0;
  transition: height 0.3s cubic-bezier(0.4, 0, 0.2, 1) 0.2s, /* Delay collapse until shader fades */
              opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1) 0.2s;
  pointer-events: none;
  border-radius: 12px;
  overflow: visible;
  position: relative;
  z-index: 11;
}

/* Glass effect for icon group */
.iconGroup.open::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 12px;
  backdrop-filter: blur(4px) saturate(180%);
  -webkit-backdrop-filter: blur(4px) saturate(180%);
  background: rgba(255, 255, 255, 0.05);
  z-index: -1;
}

.iconGroup.open {
  height: 312px; /* Increased height to account for padding */
  opacity: 1;
  pointer-events: all;
  color: #BBB;
  transition: height 0.3s cubic-bezier(0.4, 0, 0.2, 1), /* No delay when opening */
              opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  padding-top: 12px; /* Add top padding */
}

.iconGroup.open .iconLink,
.iconGroup.open .iconLabel {
  color: #BBB;
}

.iconGroup.open .iconLink svg path,
.iconGroup.open .iconLink svg rect,
.iconGroup.open .iconLink svg circle,
.iconGroup.open .iconLink svg polyline {
  stroke: #FAFAFA;
  opacity: 1;
  visibility: visible;
}

/* Style for the close icon */
.closeIcon svg path,
.closeIcon svg rect,
.closeIcon svg circle {
  stroke: url(#whiteGradient);
  stroke-width: 1.5;
}

.nav:has(.iconGroup.open) .menuLabel {
  color: #BBB;
}

.nav {
  position: fixed;
  top: env(safe-area-inset-top);
  right: env(safe-area-inset-right);
  bottom: env(safe-area-inset-bottom);
  width: 96px;
  pointer-events: none;
}

.navList {
  position: absolute;
  top: 16px;
  right: 16px;
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  width: 64px;
  pointer-events: auto;
}

.navList ul {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 20px;
  width: 100%;
  position: relative;
  z-index: 12;
}

/* Menu Button Styles */
/* Icon wrapper styles */
.iconWrapper {
  position: relative;
  z-index: 2;
  pointer-events: none;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 32px;
  height: 32px;
}

.menuLink,
.iconLink {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
  text-decoration: none;
  color: inherit;
  position: relative;
  z-index: 12; /* Above everything */
}

.menuLabel {
  font-family: var(--font-body);
  font-size: var(--fluid-xs);
  font-weight: var(--font-weight-medium);
  line-height: var(--line-height-normal);
  color: var(--text-muted);
  text-align: center;
  position: relative;
  z-index: 2;
}

.menuLink:hover .menuLabel {
  color: var(--text-body);
}

/* Icon Group Styles */
.iconGroup {
  margin-top: 32px;
  opacity: 0;
  visibility: hidden;
  transform: translateY(-12px);
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

.iconGroup.open {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.iconGroup ul {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 24px;
  align-items: center;
}

/* Icon Link Styles */
.iconLink {
  flex-direction: column;
  gap: 4px;
  color: #666666;
  text-decoration: none;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 44px;
  min-height: 44px;
}

.iconLink svg {
  color: #666666;
  min-width: 20px;
  min-height: 20px;
}

.iconLabel {
  font-family: var(--font-body);
  font-size: var(--fluid-xs);
  font-weight: var(--font-weight-medium);
  line-height: var(--line-height-normal);
  text-align: center;
  min-width: max-content;
  color: #666666;
}

.iconWrapper {
  position: relative;
  width: 22px;
  height: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 2px; /* Fine-tune vertical position */
}

.iconWrapper > div {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Reset to center */
  transform-origin: center;
}

.closeIcon {
  pointer-events: none;
}
